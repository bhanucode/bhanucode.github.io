{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/components/home/dashboard/dashboard.component.css","webpack:///./src/app/components/home/dashboard/dashboard.component.html","webpack:///./src/app/components/home/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/home.module.ts","webpack:///./src/app/components/home/order/order.component.css","webpack:///./src/app/components/home/order/order.component.html","webpack:///./src/app/components/home/order/order.component.ts","webpack:///./src/app/components/home/queue/queue.component.css","webpack:///./src/app/components/home/queue/queue.component.html","webpack:///./src/app/components/home/queue/queue.component.ts","webpack:///./src/app/components/home/resolve/resolve.component.css","webpack:///./src/app/components/home/resolve/resolve.component.html","webpack:///./src/app/components/home/resolve/resolve.component.ts","webpack:///./src/app/components/home/shipping/shipping.component.css","webpack:///./src/app/components/home/shipping/shipping.component.html","webpack:///./src/app/components/home/shipping/shipping.component.ts","webpack:///./src/app/components/home/verify/verify.component.css","webpack:///./src/app/components/home/verify/verify.component.html","webpack:///./src/app/components/home/verify/verify.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/patient/patient.component.css","webpack:///./src/app/components/patient/patient.component.html","webpack:///./src/app/components/patient/patient.component.ts","webpack:///./src/app/components/patient/patient.module.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/models/patient.model.ts","webpack:///./src/app/shared/models/user.model.ts","webpack:///./src/app/shared/services/base/api.service.ts","webpack:///./src/app/shared/services/base/resource.service.ts","webpack:///./src/app/shared/services/patient.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent }\n  \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'poc-angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SharedModule } from './shared';\nimport { PatientModule } from './components/patient/patient.module';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { HomeModule } from './components/home/home.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    PatientModule,\n    PaginationModule.forRoot(),\n    ModalModule.forRoot(),\n    AlertModule.forRoot(),\n    ReactiveFormsModule ,\n\tHomeModule\n\t\n  ],\n  providers: [AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authService.isLoggedIn.pipe(\n      take(1),\n      map((isLoggedIn: boolean) => {\n        if (!isLoggedIn) {\n          this.router.navigate(['/login']);\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Injectable()\nexport class AuthService {\n  private loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  constructor(\n    private router: Router\n  ) {}\n\n  login(user: User) {\n    if (user.userName == 'admin' && user.password == 'admin' ) {\n      this.loggedIn.next(true);\n      this.router.navigate(['/home']);\n    }\n\t\n  }\n\n  logout() {\n    this.loggedIn.next(false);\n    this.router.navigate(['/login']);\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Mail Order Pharmacy Benefit Manager</h3>\\n\\n     <div class=\\\"card-deck\\\">\\n   <div class=\\\"card border-warning mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header\\\">Translation</div>\\n  <div class=\\\"card-body text-warning\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n\\t<h5 class=\\\"card-title\\\">Step 1</h5>\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['createorder']\\\">Create Order</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n</div>\\n\\n   <div class=\\\"card border-success mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header\\\">CRX/Inquiry</div>\\n  <div class=\\\"card-body text-success\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n\\t<h5 class=\\\"card-title\\\">Step 2</h5>\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"verify\\\">Verify Order</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n</div>\\n\\n  <div class=\\\"card border-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header\\\">Queue</div>\\n  <div class=\\\"card-body text-danger\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n\\t<h5 class=\\\"card-title\\\">Step 3</h5>\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"queue\\\">Maintain the Queue</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n  <div class=\\\"card-body text-dark\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n\\t<h5 class=\\\"card-title\\\">Problem Resolution</h5>\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"resolve\\\">Resolve Conflicts</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n</div>\\n\\n   <div class=\\\"card border-info mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header\\\">Prescription Verification</div>\\n  <div class=\\\"card-body text-info\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n\\t<h5 class=\\\"card-title\\\">Step 4</h5>\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"shipping\\\">Shipping Order</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n</div>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashBoardComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from 'src/app/auth/auth.guard';\nimport { HomeComponent } from '././home.component';\nimport { OrderComponent } from '././order/order.component';\nimport { VerifyComponent } from './verify/verify.component';\nimport { QueueComponent } from './queue/queue.component';\nimport { ResolveComponent } from './resolve/resolve.component';\nimport { ShippingComponent } from './shipping/shipping.component';\nimport { DashBoardComponent } from './dashboard/dashboard.component';\n\nexport const homeRouting: Routes = [\n    {\n      path: 'home',\n      component: DashBoardComponent,\n\t  canActivate: [AuthGuard],\n      children: [   \n    { path: 'createorder', component: OrderComponent,canActivate: [AuthGuard]},\n\t{ path: 'verify', component: VerifyComponent,canActivate: [AuthGuard]},  \n\t{ path: 'queue', component: QueueComponent,canActivate: [AuthGuard]},  \n\t{ path: 'resolve', component: ResolveComponent,canActivate: [AuthGuard]},  \n\t{ path: 'shipping', component: ShippingComponent,canActivate: [AuthGuard]}      \n    ]\n\t  },\n];\n  \n  @NgModule({\n    imports: [\n      CommonModule,\n      SharedModule,    \n      RouterModule.forChild(homeRouting),\n      ReactiveFormsModule\n\t  \n    ],\n    declarations: [\n\tHomeComponent,\n\tDashBoardComponent,\n\tOrderComponent,\n\tVerifyComponent,\n\tShippingComponent,\n\tQueueComponent,\n\tResolveComponent\n\t]    \n  })\n  export class HomeModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9vcmRlci9vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Create Order</h3>\\n\\n     \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  \n constructor(){\n \n \n }\n \n ngOnInit(){\n \n\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9xdWV1ZS9xdWV1ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Maintain Queue</h3>\\n\\n     \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-queue',\n  templateUrl: './queue.component.html',\n  styleUrls: ['./queue.component.css']\n})\nexport class QueueComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9yZXNvbHZlL3Jlc29sdmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Resolve Conflicts</h3>\\n\\n     \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-resolve',\n  templateUrl: './resolve.component.html',\n  styleUrls: ['./resolve.component.css']\n})\nexport class ResolveComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9zaGlwcGluZy9zaGlwcGluZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Mail Order Shipping Page</h3>\\n\\n     \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-ship',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS92ZXJpZnkvdmVyaWZ5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h3>Verify Order Page</h3>\\n\\n     </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  \n constructor(){\n }\n \n ngOnInit(){\n }\n}\n","module.exports = \".field-icon {\\r\\n  float: right;\\r\\n  left: -15px;\\r\\n  margin-top: -25px;\\r\\n  position: relative;\\r\\n  z-index: 2;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZC1pY29uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbGVmdDogLTE1cHg7XHJcbiAgbWFyZ2luLXRvcDogLTI1cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHotaW5kZXg6IDI7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container py-5\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <h2 class=\\\"text-center text-white mb-4\\\">Bootstrap 4 Login Form</h2>\\n           \\n\\t\\t  <div class=\\\"row\\\">\\n\\t\\t  \\n              <div class=\\\"col-md-6 mx-auto\\\">\\n\\t\\t\\t  \\n                  <div class=\\\"card rounded-0\\\">\\n                      <div class=\\\"card-header\\\">\\n                          <h3 class=\\\"mb-0\\\">Login</h3>\\n                      </div>\\n                      <div class=\\\"card-body\\\">\\n                          <form class=\\\"form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group\\\">\\n                                  <label for=\\\"uname1\\\">UserName</label>\\n                                  <input type=\\\"text\\\" formControlName=\\\"userName\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && userName.invalid }\\\"/>\\n                                  <div *ngIf=\\\"submitted && userName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"password.errors.required\\\">userName is required</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"userName.invalid\\\">Invalid userName</div>\\n                                  </div>  \\n                              \\n                                </div>\\n                              <div class=\\\"form-group\\\">\\n                                  <label>Password</label>\\n                                  <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && password.invalid }\\\" #passwordeye/>\\n                                  <span (click)=\\\"passwordeye.type=passwordeye.type=='password'?'text':'password'\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"fa fa-fw field-icon toggle-password\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"(passwordeye.type=='password')?' fa-eye':' fa-eye-slash'\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t  <div *ngIf=\\\"submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"password.errors.required\\\">password is required</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password.invalid\\\">Invalid userName</div>\\n                                    <div *ngIf=\\\"password.errors.minlength\\\">password requires 3 characters</div>\\n                                  </div>  \\n                              </div>\\n\\t\\t\\t\\t\\t\\t\\t  \\n                              <div class=\\\"form-check\\\">\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"defaultCheck1\\\">\\n                                <label class=\\\"form-check-label\\\" for=\\\"defaultCheck1\\\"> Remember me </label>  \\n                              </div>\\n                              <button class=\\\"btn btn-success btn-lg float-right\\\" id=\\\"btnLogin\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n                          </form>\\n\\t\\t\\t\\t\\t\\t \\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/models/user.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  loginForm: FormGroup;\n  submitted = false;\n  user: User;\n \n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  get userName() { return this.loginForm.get('userName'); }\n  get password() { return this.loginForm.get('password'); }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.user = new User(this.loginForm.value.userName,this.loginForm.value.password);\n    console.log(this.user);\n\tthis.login();\n  }  \n  \n  login(){\n    this.authService.login(this.user);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg  navbar-dark bg-dark\\\" *ngIf=\\\"isLoggedIn$ | async as isLoggedIn\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">POC PBM</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\t<li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"home\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"patient\\\">Patient</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isLoggedIn$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn;\n  }\n\n  logout(){\n    this.authService.logout();\n  }\n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12 txtBox\\\">\\n    <br>\\n      <h4>Patient Profile</h4>\\n\\n      <form [formGroup]=\\\"patientForm\\\">\\n        <div [ngClass]=\\\"cssClass\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n           {{message}}\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <label for=\\\"codigo\\\">Full Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"fullName\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && fullName.invalid }\\\"/>\\n            <div *ngIf=\\\"submitted && fullName.invalid\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"fullName.invalid\\\"> Name invalid</div>\\n            </div>  \\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"descricao\\\">Email</label>\\n            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && email.errors }\\\"/>\\n            <div *ngIf=\\\"submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                <div *ngIf=\\\"email.errors.email\\\">Email invalid</div>\\n            </div>  \\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"codigo\\\">Telephone</label>\\n            <input type=\\\"text\\\" formControlName=\\\"telephone\\\" class=\\\"form-control\\\" mask='(000) 000-0000'  [ngClass]=\\\"{ 'is-invalid': submitted && telephone.invalid }\\\"/>\\n            <div *ngIf=\\\"submitted && telephone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"telephone.invalid\\\">Telephone invalid</div>\\n            </div>  \\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"descricao\\\">Sex</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"gender\\\" [ngClass]=\\\"{ 'is-invalid': submitted && gender.invalid }\\\" >\\n              <option value=\\\"M\\\">Male</option>\\n              <option value=\\\"F\\\">Female</option>\\n            </select>\\n            <div *ngIf=\\\"submitted && gender.invalid\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"gender.invalid\\\">Sex invalid</div>\\n            </div> \\n          </div>\\n        </div>\\n      </form>  \\n      <br>\\n      <div class=\\\"form-row\\\">\\n        <button type=\\\"button\\\" rel=\\\"tooltip\\\" *ngIf=\\\"!id\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePatient()\\\">Save</button>\\n        <button type=\\\"button\\\" rel=\\\"tooltip\\\" *ngIf=\\\"id\\\" class=\\\"btn btn-success\\\" (click)=\\\"updatePatient()\\\">Update</button>&nbsp;\\n        <button type=\\\"button\\\" (click)=\\\"cancel(true)\\\" class=\\\"btn btn-secondary\\\">Cancel</button>\\n     </div> \\n     <br>\\n    <div class=\\\"form-row\\\">\\n        <table id=\\\"gridPatient\\\" class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Email</th>\\n              <th>Telephone</th>\\n              <th>Sex</th>\\n              <th width=\\\"140\\\">Action</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"pagination && pagination.totalElements == 0\\\">\\n             <tr>\\n               <td colspan=\\\"5\\\">Number  of patients entered</td>\\n             </tr> \\n          </tbody>\\n          <tbody *ngIf=\\\"pagination\\\">\\n            <tr *ngFor=\\\"let patient of patients\\\">\\n              <td>{{ patient.name }}</td>\\n              <td>{{ patient.email }}</td>\\n              <td>{{ patient.telephone }}</td>\\n              <td>{{ patient.sex == \\\"M\\\" ? \\\"Male\\\" : \\\"Female\\\" }}</td>\\n              <td>\\n                <div class=\\\"btn-group btn-group-sm\\\">\\n                  <a (click)=\\\"loadPatient(patient.id)\\\" rel=\\\"tooltip\\\" title=\\\"Editar\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-fw fa-pencil-square-o\\\"></i></a>\\n                  <button (click)=\\\"deletePatient(patient.id)\\\" type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"Apagar?\\\" class=\\\"btn btn-default btn-danger\\\"><i class=\\\"fa fa-fw fa-trash-o\\\"></i></button>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <pagination *ngIf=\\\"pagination && pagination.totalPages > 1\\\" \\n            [boundaryLinks]=\\\"true\\\" \\n            [totalItems]=\\\"pagination.totalElements\\\" \\n            [(ngModel)]=\\\"pagination.number\\\"\\n            class=\\\"pagination-sm\\\" \\n            previousText=\\\"&lsaquo;\\\" \\n            nextText=\\\"&rsaquo;\\\" \\n            firstText=\\\"&laquo;\\\" \\n            lastText=\\\"&raquo;\\\" \\n            [itemsPerPage]=\\\"pagination.size\\\"\\n            (pageChanged)=\\\"pageChanged($event)\\\">\\n        </pagination>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from 'src/app/shared/services/patient.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Patient } from 'src/app/shared/models/patient.model';\nimport { Pagination } from 'src/app/shared/models/base/pagination.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n  \n  patientForm: FormGroup;\n  submitted = false;\n  id: number;\n  patient: Patient;\n  patients:Patient[]=[];\n  pagination: Pagination<Patient>;\n  errors: Object = {};\n  message: string;\n  cssClass: string;\n  alerts: any = [];\n  filters: any = {\n    name: '',\n    page: 0,\n    sort: 'name',\n    size: 10\n  };\n  \n  constructor(\n    private patientService: PatientService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n     this.patientService.getAll().subscribe((data: Patient[])=>{\n      console.log(data);\n      this.patients = data;\n    })  \n    this.patientForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telephone: ['', Validators.required],\n      gender: ['', Validators.required],\n    });\n  }\n\n  get fullName() { return this.patientForm.get('fullName'); }\n  get email() { return this.patientForm.get('email'); }\n  get telephone() { return this.patientForm.get('telephone'); }\n  get gender() { return this.patientForm.get('gender'); }\n\n  cancel(cleanMessage: boolean){\n    this.id = null;\n    this.patientForm.reset();\n    this.submitted = false;\n    if(cleanMessage){\n      this.message = null;\n    }  \n  }\n\n  reloadPage(msg: string, css: string){\n    this.cssClass = css        \n    this.message = msg;\n    this.loadPatients();\n    setTimeout(()=>{ \n      this.message = null;\n    }, 3000);\n  }\n  \n  loadPatient(id: number){\n    this.message = null;\n    this.id = id;\n    this.patientService\n      .load(id)\n      .subscribe(\n        patient =>  this.updateValues(patient)\n      );\n  }\n\n  updateValues(patient: Patient) {\n    this.patientForm.setValue({\n      fullName: patient.name,\n      email: patient.email,\n      telephone: patient.telephone,\n      gender: patient.sex\n    });\n  }\n  \n  loadPatients(page: number = 0) {    \n    this.filters.page = page;\n    this.patientService\n      .loadAll(this.filters)\n      .subscribe(\n        pagination => this.pagination = pagination,\n        error => this.message =  error.message\n      );      \n  }\n\n  pageChanged(event: any) {\n    this.loadPatients(event.page);\n  }\n\n  savePatient(){\n    this.submitted = true;\n    if (this.patientForm.invalid) {\n      return;\n    }\n    this.buildPatient(null);\n    this.patientService.create(this.patientForm.value)\n      .subscribe(\n        patient => { \n          this.reloadPage('Save patient successfully','alert alert-success');\n          this.cancel(false);\n        },\n        error => {\n          this.errors = error.fieldErrors\n        }\n    );\n  }\n\n  buildPatient(id: number){\n    this.patient = new Patient(id,this.patientForm.value.fullName,this.patientForm.value.email,this.patientForm.value.telephone,this.patientForm.value.gender);\n  }\n  \n  updatePatient(){\n    this.submitted = true;\n    if (this.patientForm.invalid) {\n      return;\n    }\n    this.buildPatient(this.id);\n    this.patientService.update(this.patient,this.id)\n      .subscribe(\n        patient => {        \n          this.reloadPage('Update patent successfully','alert alert-success');\n          this.cancel(false);\n        },\n        error => {\n          this.errors = error.fieldErrors\n        }\n      );\n  }\n\n  deletePatient(id: number){\n    this.patientService.delete(id)\n    .subscribe(\n      patient => {\n        this.reloadPage('delete patient sucessfully','alert alert-success');\n        this.cancel(false);\n      },\n      error => {\n        this.errors = error.fieldErrors\n      }\n    );\n  }\n  \n}\n","import { PatientComponent } from './patient.component';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from 'src/app/auth/auth.guard';\n\nconst patientRouting: ModuleWithProviders = RouterModule.forChild([\n    {\n      path: 'patient',\n      component: PatientComponent,\n      canActivate: [AuthGuard]\n    }\n  ]);\n  \n  @NgModule({\n    imports: [\n      CommonModule,\n      SharedModule,    \n      patientRouting,\n      ReactiveFormsModule\n    ],\n    declarations: [PatientComponent]    \n  })\n  export class PatientModule { }","export * from './shared.module';","export class Patient {\r\n  constructor(public id: number, public name: string,public email: string, public telephone: string, public sex: string) {}\r\n  \r\n}","export class User {\n  constructor(public userName: string, public password: string) {}\n  \n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  private setHttpHeaders(): HttpHeaders {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    };\r\n\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n  \r\n  private formatErrors(error: any) {\r\n   if (error.status == 401) {      \r\n      window.location.href = error.json().loginUrl  + \"&goto=\" + window.location.href;\r\n      return;\r\n    }\r\n\r\n    return Observable.throw(error.json());\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    const options = { params: params, headers: this.setHttpHeaders() };\r\n    return this.http.get(`${environment.api_url}${path}`,options);\r\n  }\r\n\r\n  put(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(`${environment.api_url}${path}`, JSON.stringify(body),{ headers:this.setHttpHeaders() });\r\n  }\r\n\r\n  post(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.post(`${environment.api_url}${path}`, JSON.stringify(body),{ headers:this.setHttpHeaders() });\r\n  }\r\n\r\n  delete(path: string): Observable<any> {\r\n    return this.http.delete(`${environment.api_url}${path}`,{ headers:this.setHttpHeaders() });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { ApiService } from './api.service';\r\nimport { Pagination } from './../../models/base/pagination.model';\r\nimport { map,catchError } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport {  throwError } from 'rxjs';\r\n@Injectable()\r\nexport abstract class ResourceService<T> {\r\n\r\n  protected path: String;\r\n\r\n  constructor(\r\n    private apiService: ApiService,private httpClient: HttpClient\r\n  ) { }\r\n\r\n  abstract getPath(): string;\r\n\r\n  create(model: T): Observable<T> {\r\n    return this.apiService.post(this.getPath(), model); \r\n  }\r\n\r\n  update(model: T, id: any): Observable<T> {\r\n    return this.apiService .put(`${this.getPath()}/${id}`, model);\r\n  }\r\n\r\n  delete(id: any): Observable<T> {\r\n    return this.apiService.delete(`${this.getPath()}/${id}`);\r\n  }\r\n\r\n  load(id: any): Observable<T> {\r\n    return this.apiService.get(`${this.getPath()}/${id}`);\r\n  }\r\n\r\n   getAll(): Observable<T[]> {\r\n    return this.httpClient.get<T[]>(this.getPath())\r\n    .pipe(\r\n      catchError(this.errorHandler)\r\n    )\r\n  }\r\n  loadAll(params: any = []): Observable<Pagination<T>> {\r\n    if (params.page) {\r\n      params.page--;\r\n    }\r\n    return this.apiService.get(this.getPath(), params).pipe(\r\n      map(data => {\r\n      data.number++;\r\n      return data as Pagination<T>\r\n    }));\r\n    \r\n  }\r\n  \r\n  errorHandler(error) {\r\n     let errorMessage = '';\r\n     if(error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     console.log(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Patient } from '../models/patient.model';\r\nimport { ResourceService } from './base/resource.service';\r\n\r\n@Injectable()\r\nexport class PatientService extends ResourceService<Patient> {\r\n  \r\n  getPath(): string {\r\n    return '/patient';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\n\r\nimport { ApiService } from './services/base/api.service';\r\nimport { PatientService } from './services/patient.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule    \r\n  ],\r\n  declarations: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule, \r\n    RouterModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    PaginationModule,\r\n    ModalModule,\r\n    AlertModule,\r\n  ],\r\n  providers: [\r\n    ApiService,\r\n    PatientService\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:8088'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}